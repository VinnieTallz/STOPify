{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Plan Group\\\\Documents\\\\Inception\\\\Projects\\\\Proj2\\\\c13-project2-team4\\\\src\\\\components\\\\Map.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { APIProvider, Map } from '@vis.gl/react-google-maps';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MainMap = () => {\n  _s();\n  const [userLocation, setUserLocation] = useState(null);\n  useEffect(() => {\n    const fetchUserLocation = () => {\n      navigator.geolocation.getCurrentPosition(position => {\n        setUserLocation({\n          lat: position.coords.latitude,\n          lng: position.coords.longitude\n        });\n      }, error => {\n        console.error(\"Error getting user location:\", error);\n        // Set a default location if geolocation fails\n        setUserLocation({\n          lat: 51.0447,\n          lng: -114.0719\n        });\n      });\n    };\n    fetchUserLocation();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex justify-center items-center h-96 bg-gray-200\",\n    children: /*#__PURE__*/_jsxDEV(APIProvider, {\n      apiKey: 'AIzaSyA4u5WHz6-4ldEWPwyrjjjhhtkOwVm1lyo',\n      onLoad: () => console.log('Maps API has loaded.'),\n      children: userLocation &&\n      /*#__PURE__*/\n      // Conditionally render the map when userLocation is available\n      _jsxDEV(Map, {\n        defaultZoom: 16,\n        defaultCenter: userLocation\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_s(MainMap, \"tBb+ryomPmrBvnn9NjkAIlzHge8=\");\n_c = MainMap;\nexport default MainMap;\nvar _c;\n$RefreshReg$(_c, \"MainMap\");","map":{"version":3,"names":["React","useState","useEffect","APIProvider","Map","jsxDEV","_jsxDEV","MainMap","_s","userLocation","setUserLocation","fetchUserLocation","navigator","geolocation","getCurrentPosition","position","lat","coords","latitude","lng","longitude","error","console","className","children","apiKey","onLoad","log","defaultZoom","defaultCenter","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Plan Group/Documents/Inception/Projects/Proj2/c13-project2-team4/src/components/Map.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { APIProvider, Map, } from '@vis.gl/react-google-maps';\r\n\r\nconst MainMap = () => {\r\n  const [userLocation, setUserLocation] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchUserLocation = () => {\r\n        navigator.geolocation.getCurrentPosition(\r\n          (position) => {\r\n            setUserLocation({\r\n              lat: position.coords.latitude,\r\n              lng: position.coords.longitude,\r\n            });\r\n          },\r\n          (error) => {\r\n            console.error(\"Error getting user location:\", error);\r\n            // Set a default location if geolocation fails\r\n            setUserLocation({ lat: 51.0447, lng: -114.0719 }); \r\n          }\r\n        );\r\n    };\r\n\r\n    fetchUserLocation();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"flex justify-center items-center h-96 bg-gray-200\">\r\n      <APIProvider apiKey={'AIzaSyA4u5WHz6-4ldEWPwyrjjjhhtkOwVm1lyo'} onLoad={() => console.log('Maps API has loaded.')}>\r\n        {userLocation && ( // Conditionally render the map when userLocation is available\r\n          <Map\r\n            defaultZoom={16}\r\n            defaultCenter={userLocation}\r\n          >\r\n          </Map>\r\n        )}\r\n      </APIProvider>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MainMap;\r\n\r\n\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,WAAW,EAAEC,GAAG,QAAS,2BAA2B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9D,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAEtDC,SAAS,CAAC,MAAM;IACd,MAAMS,iBAAiB,GAAGA,CAAA,KAAM;MAC5BC,SAAS,CAACC,WAAW,CAACC,kBAAkB,CACrCC,QAAQ,IAAK;QACZL,eAAe,CAAC;UACdM,GAAG,EAAED,QAAQ,CAACE,MAAM,CAACC,QAAQ;UAC7BC,GAAG,EAAEJ,QAAQ,CAACE,MAAM,CAACG;QACvB,CAAC,CAAC;MACJ,CAAC,EACAC,KAAK,IAAK;QACTC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;QACpD;QACAX,eAAe,CAAC;UAAEM,GAAG,EAAE,OAAO;UAAEG,GAAG,EAAE,CAAC;QAAS,CAAC,CAAC;MACnD,CACF,CAAC;IACL,CAAC;IAEDR,iBAAiB,CAAC,CAAC;EACrB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEL,OAAA;IAAKiB,SAAS,EAAC,mDAAmD;IAAAC,QAAA,eAChElB,OAAA,CAACH,WAAW;MAACsB,MAAM,EAAE,yCAA0C;MAACC,MAAM,EAAEA,CAAA,KAAMJ,OAAO,CAACK,GAAG,CAAC,sBAAsB,CAAE;MAAAH,QAAA,EAC/Gf,YAAY;MAAA;MAAM;MACjBH,OAAA,CAACF,GAAG;QACFwB,WAAW,EAAE,EAAG;QAChBC,aAAa,EAAEpB;MAAa;QAAAqB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEzB;IACN;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACU;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACX,CAAC;AAEV,CAAC;AAACzB,EAAA,CApCID,OAAO;AAAA2B,EAAA,GAAP3B,OAAO;AAsCb,eAAeA,OAAO;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}